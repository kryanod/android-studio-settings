<templateSet group="user">
  <template name="callback" value="interface Callback {&#10;    fun on$FIELD$()&#10;    fun on$FIELD$Error(error: Throwable)&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="mockito" value="@org.junit.Rule&#10;@JvmField&#10;var mockitoRule: org.mockito.junit.MockitoRule = org.mockito.junit.MockitoJUnit.rule()" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="before" value="@org.junit.Before&#10;fun setUp() {&#10;    $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="mock" value="@org.mockito.Mock&#10;lateinit var $END$" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="instanttask" value="@org.junit.Rule&#10;@JvmField&#10;var instantRule = androidx.arch.core.executor.testing.InstantTaskExecutorRule()" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="robotest" value="@org.junit.runner.RunWith(androidx.test.ext.junit.runners.AndroidJUnit4::class)&#10;@org.robolectric.annotation.Config(sdk = [org.robolectric.annotation.Config.OLDEST_SDK])&#10;@org.robolectric.annotation.LooperMode(org.robolectric.annotation.LooperMode.Mode.PAUSED)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="activitytestrule" value="@get:org.junit.Rule&#10;var rule = androidx.test.rule.ActivityTestRule($ACTIVITY_NAME$::class.java)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="ACTIVITY_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="after" value="@org.junit.After&#10;fun tearDown() {&#10;    $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="event" value="class $NAME$: ru.m2.squaremeter.core.analytics.Event(&quot;$END$&quot;)" description="Analytics event class" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="bodyl" value="android:textAppearance=&quot;@style/BodyL&quot;" description="textAppearance BodyL" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="bodym" value="android:textAppearance=&quot;@style/BodyM&quot;" description="textAppearance BodyM" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="h1" value="android:textAppearance=&quot;@style/H1&quot;" description="textAppearance H1" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="h2" value="android:textAppearance=&quot;@style/H2&quot;" description="textAppearance H2" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="bodylb" value="android:textAppearance=&quot;@style/BodyLB&quot;" description="textAppearance BodyLB" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="bodymb" value="android:textAppearance=&quot;@style/BodyMB&quot;" description="textAppearance BodyMB" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="bodys" value="android:textAppearance=&quot;@style/BodyS&quot;" description="textAppearance BodyS" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="actionm" value="android:textAppearance=&quot;@style/ActionM&quot;" description="textAppearance ActionM" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="actions" value="android:textAppearance=&quot;@style/ActionS&quot;" description="textAppearance ActionS" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="bodysb" value="android:textAppearance=&quot;@style/BodySB&quot;" description="textAppearance BodySB" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_ATTRIBUTE" value="true" />
    </context>
  </template>
  <template name="inject" value="@javax.inject.Inject&#10;lateinit var $END$" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="minject" value="fun inject(target: $END$)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="ababa" value="println(&quot;ABABA $END$&quot;)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="provides" value="@dagger.Provides&#10;fun provide" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="iinject" value="init {&#10;    ru.m2.squaremeter.core.di.di.inject(this)&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="json" value="@com.squareup.moshi.Json(name = &quot;$NAME$&quot;) val $NAME$: $TYPE$? = null,$END$" description="Moshi Json field" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="singleliveevent" value="private val mutable$NAME$LiveData = arloid.SingleLiveEvent&lt;$TYPE$&gt;()&#10;val $NAME2$LiveData: androidx.lifecycle.LiveData&lt;$TYPE$&gt; = mutable$NAME$LiveData" description="SingleLiveEvent" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME2" expression="camelCase(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="livedata" value="private val mutable$NAME$LiveData = androidx.lifecycle.MutableLiveData&lt;$TYPE$&gt;()&#10;val $NAME2$LiveData: androidx.lifecycle.LiveData&lt;$TYPE$&gt; = mutable$NAME$LiveData" description="pair of MutableLiveData and LiveData" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME2" expression="camelCase(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="parameterized" value="companion object {&#10;        @JvmStatic&#10;        @org.junit.runners.Parameterized.Parameters&#10;        fun data(): Collection&lt;Array&lt;Any&gt;&gt; = listOf(&#10;            arrayOf($END$),&#10;        )&#10;    }" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="jsonclass" value="@com.squareup.moshi.JsonClass(generateAdapter = true)" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="cleanup" value="@org.junit.Before&#10;@org.junit.After&#10;fun cleanUp() {&#10;    $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="response" value="@get:Synchronized&#10;@set:Synchronized&#10;var $END$ " description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="viewmodeltest" value="@org.junit.Rule&#10;@JvmField&#10;var instantRule = androidx.arch.core.executor.testing.InstantTaskExecutorRule()&#10;    &#10;private lateinit var viewModel: $NAME$ViewModel&#10;private lateinit var stateLiveData: com.jraska.livedata.TestObserver&lt;$NAME$State&gt;&#10;private lateinit var errorLiveData: com.jraska.livedata.TestObserver&lt;String&gt;&#10;&#10;@org.junit.Before&#10;fun setUp() {&#10;    viewModel = $NAME$ViewModel()&#10;    stateLiveData = viewModel.stateLiveData.test()&#10;    errorLiveData = viewModel.errorLiveData.test()&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="findviewbyid" value="private val $NAME$ = rootView.findViewById&lt;$END$&gt;(R.id.$NAME$)" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
</templateSet>